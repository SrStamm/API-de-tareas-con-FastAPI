# üóÇÔ∏è API de Tareas con FastAPI

Una API REST para gestionar tareas y usuarios en proyectos dentro de grupos.
Permite crear, asignar y completar tareas, con autenticaci√≥n y control de permisos.  
Incluye un sistema de chat por proyecto, comentarios en tareas asignadas, control de estado y vencimiento.

---

## üöÄ Caracter√≠sticas

- Registro, login, logout y refresh de usuarios con JWT
- Crear, editar y eliminar grupos
- Agregar y gestionar usuarios en grupos
- Crear, editar y eliminar proyectos
- Agregar usuarios a proyectos
- Crear, editar, eliminar y asignar tareas a usuarios
- Comentarios en tareas
- Control de estado y fecha de vencimiento
- Roles y permisos
- WebSocket para notificaciones en tiempo real
- Chat por proyecto (WebSocket + Redis)

---

## üõ† Tecnolog√≠as

- Python 3.12
- FastAPI
- SQLModel
- PostgreSQL
- Redis (cache y pub/sub)
- Docker & Docker Compose

---

## üîß Instalaci√≥n (modo local)

1. Clona el repositorio:
```bash
git clone <url-del-repo>
cd backend
```

2. Crear un entorno virtual:

```bash
python -m venv env
source env/bin/activate  # En Linux/Mac
env\Scripts\activate     # En Windows
```

3. Instala dependencias (sin testing):

```bash
# Sin las dependencias de testing 
pip install -r requirements.txt

# Con las dependencias del testing
pip install -r requirements-test.txt
```

4. Ejecuta la APP:

```bash
uvicorn main:app --reload
```

# Instalaci√≥n (con Docker)

1. Ejecuta el siguiente comando:

```bash
docker-compose up --build
```
La api estar√° disponible en `http://localhost:8000`

## Variables de entorno:

Crea un archivo `.env` en la ra√≠z con las siguientes variables:

# PostgreSQL
POSTGRES_USER=usuario
POSTGRES_PASSWORD=contrase√±a
POSTGRES_DB=nombre_base
DATABASE_URL=postgresql+psycopg2://usuario:contrase√±a@task-db:5432/nombre_base

# Redis
REDIS_PASSWORD=clave_redis

# Seguridad
SECRET_KEY=clave_secreta
ALGORITHM=HS256

# Tokens
ACCESS_TOKEN_DURATION=30
REFRESH_TOKEN_DURATION=60

## Documentaci√≥n de la API

- Swagger UI: [`http://localhost:8000/docs']
- Redoc: [`http://localhost:8000/redoc']

## Testing

Para correr los test:
```bash
pytest -q

# o

pytest -v
```

Tambi√©n se podr√≠an usar los bash scripts que se encuentran en la carpeta 'src'.

### Licencia
Este proyecto est√° bajo la licencia MIT.
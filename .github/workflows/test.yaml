name: CI - Lint & Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ALGORITHM: HS256
      SECRET_KEY: MW6mdMOU8Ga58KSty8BYakM185zW857fZlTBqdmp1JkVih3qqr
      REDIS_HOST: localhost  # Cambiado a localhost
      REDIS_PORT: 6379
      REDIS_DB: 0
      DATABASE_URL: postgresql+psycopg2://postgres:amaterasu@postgres:5432/database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: amaterasu
      POSTGRES_DB: database
      CI: "true"

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: amaterasu
          POSTGRES_DB: database
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name postgres

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name redis

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install flake8
          pip install -r requirements-test.txt

      - name: Lint code
        run: flake8 ./src --count --exit-zero --max-line-length=127 --statistics

      - name: Wait for services
        run: |
          echo "Waiting for services to be ready..."
          timeout 120s bash -c 'until docker inspect --format "{{.State.Health.Status}}" postgres | grep -q "healthy"; do sleep 2; echo "Waiting for PostgreSQL..."; done'
          timeout 60s bash -c 'until docker inspect --format "{{.State.Health.Status}}" redis | grep -q "healthy"; do sleep 2; echo "Waiting for Redis..."; done'
          echo "All services are ready!"

      - name: Configure vm.overcommit_memory
        run: sudo sysctl vm.overcommit_memory=1

      - name: Test Redis connection
        run: |
          docker exec redis redis-cli ping

      - name: Check Redis logs
        run: docker logs redis

      - name: Inspect Redis container network
        run: |
          docker inspect redis --format '{{json .NetworkSettings.Networks }}'

      - name: Run tests
        run: bash ./src/ci-test.sh